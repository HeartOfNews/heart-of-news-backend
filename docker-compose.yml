version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: elasticsearch:8.7.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    command: celery -A app.worker worker --loglevel=info

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery_worker
    command: celery -A app.worker beat --loglevel=info

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: python -m app.scraper.main

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: